{
  "createdAt": "2025-05-20T08:02:40.140Z",
  "updatedAt": "2025-08-26T18:01:53.000Z",
  "id": "Jwf58kLaJ6xsens3",
  "name": "RAG System",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "dataType": "binary",
        "binaryMode": "specificField",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "file_id",
                "value": "={{ $json.id }}"
              },
              {
                "name": "pubkey",
                "value": "={{ $json.name }}"
              },
              {
                "name": "=overarching_theme",
                "value": "={{ $('Extract Meta Data').item.json.output.overarching_theme }}"
              },
              {
                "name": "recurring_topics",
                "value": "={{ $('Extract Meta Data').item.json.output.recurring_topics }}"
              },
              {
                "name": "pain_points",
                "value": "={{ $('Extract Meta Data').item.json.output.pain_points }}"
              },
              {
                "name": "analytical_insights",
                "value": "={{ $('Extract Meta Data').item.json.output.analytical_insights }}"
              },
              {
                "name": "conclusion",
                "value": "={{ $('Extract Meta Data').item.json.output.conclusion }}"
              },
              {
                "name": "keywords",
                "value": "={{ $('Extract Meta Data').item.json.output.keywords }}"
              }
            ]
          }
        }
      },
      "id": "e2c3bda0-71ef-44ee-a72f-2feb2e135cb9",
      "name": "Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "position": [
        1984,
        2144
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "chunkSize": 3000
      },
      "id": "66e5b12c-4cac-46b0-9d9b-fdf3f92ad92d",
      "name": "Token Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
      "position": [
        2080,
        2288
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "mode": "insert",
        "qdrantCollection": {
          "__rl": true,
          "mode": "id",
          "value": "=nostr-damus-user-profiles"
        },
        "options": {}
      },
      "id": "1f4f176c-0502-4a78-a745-e0c570164489",
      "name": "Qdrant Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "position": [
        1904,
        1952
      ],
      "executeOnce": false,
      "retryOnFail": true,
      "typeVersion": 1,
      "credentials": {
        "qdrantApi": {
          "id": "dWw9aQLW4QsMtr1m",
          "name": "QdrantApi account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "105937e4-e00c-444e-a1a9-8a227be83755",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        1552,
        1280
      ],
      "typeVersion": 3,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {},
      "id": "f419d2d2-2a91-41ac-b9fe-2682d0003714",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "position": [
        2384,
        2272
      ],
      "webhookId": "237d7f8a-aead-479a-b813-f407d1f37fa5",
      "typeVersion": 1.1
    },
    {
      "parameters": {},
      "id": "ecfa37a5-1c5e-497d-a31c-04cc4cb2f5b8",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        208,
        1152
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash-exp",
        "options": {
          "temperature": 0.4
        }
      },
      "id": "17f9f940-53d8-4fd4-833b-e6733fca3306",
      "name": "Google Gemini Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "position": [
        2480,
        1472
      ],
      "typeVersion": 1,
      "credentials": {
        "googlePalmApi": {
          "id": "RzMqWR9wvxNArzYZ",
          "name": "Google Gemini(PaLM) Api account 2"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "id": "bff4297e-acf6-4c6f-a9cc-f5a3e2306543",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "position": [
        2192,
        1632
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "text": "={{ $json.data }}",
        "attributes": {
          "attributes": [
            {
              "name": "overarching_theme",
              "description": "Summarize the main theme(s) discussed in the \"Overarching Theme\" section."
            },
            {
              "name": "recurring_topics",
              "description": "List the recurring topics mentioned in the \"Common Threads\" section as an array of strings."
            },
            {
              "name": "pain_points",
              "description": "Summarize the user's frustrations or challenges mentioned in the \"Pain Points\" section as an array of strings."
            },
            {
              "name": "analytical_insights",
              "description": "Extract a list of key analytical observations from the \"Analytical Insights\" section, including shifts in tone or behavior."
            },
            {
              "name": "conclusion",
              "description": "Summarize the conclusions drawn about the user’s threads and their overall focus."
            },
            {
              "name": "keywords",
              "description": "Generate a list of 10 keywords that capture the essence of the document (e.g., \"askNostr,\" \"decentralization,\" \"spam filtering\")."
            }
          ]
        },
        "options": {
          "systemPromptTemplate": "You are an expert extraction algorithm.\nOnly extract relevant information from the text.\nIf you do not know the value of an attribute asked to extract, you may omit the attribute's value."
        }
      },
      "id": "778a5f96-7f86-4043-8c5a-8d8e4df180b3",
      "name": "Extract Meta Data",
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "position": [
        2384,
        1248
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "c1bf52f9-2735-4494-9af8-7cba2b059e1c",
      "name": "Get File Contents",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        2192,
        1248
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $json.id }}"
        },
        "options": {}
      },
      "id": "d01349d6-44b4-4552-998d-c8cc0c6fdb0b",
      "name": "Download File From Google Drive",
      "type": "n8n-nodes-base.googleDrive",
      "position": [
        1872,
        1248
      ],
      "typeVersion": 3,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "ARUqguaS8bMoiyrY",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "resource": "fileFolder",
        "searchMethod": "query",
        "returnAll": true,
        "filter": {
          "driveId": {
            "mode": "list",
            "value": "My Drive"
          },
          "folderId": {
            "__rl": true,
            "mode": "id",
            "value": "={{ $json.folder_id }}"
          }
        },
        "options": {}
      },
      "id": "58244935-83ee-428f-878a-babd51830e2f",
      "name": "Find File Ids in Google Drive Folder",
      "type": "n8n-nodes-base.googleDrive",
      "position": [
        752,
        1264
      ],
      "typeVersion": 3,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "ARUqguaS8bMoiyrY",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "model": "text-embedding-3-large",
        "options": {}
      },
      "id": "05f7651a-eb6e-48fa-a58b-f61124368113",
      "name": "text-embeddings-3-large",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "position": [
        1840,
        2144
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e6f6188f-c895-4c8c-b39a-0ef55b490fd6",
              "name": "folder_id",
              "type": "string",
              "value": "[Your-Google-Folder-ID]"
            }
          ]
        },
        "options": {}
      },
      "id": "79736a8b-80dd-4925-b937-6b2576fcc6dc",
      "name": "Google Folder ID",
      "type": "n8n-nodes-base.set",
      "position": [
        560,
        1200
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "ae019caa-3f1c-4cd3-a6cd-f9a6d2e12578",
      "name": "gpt-4o-mini1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        880,
        2416
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "code": {
          "execute": {
            "code": "const { QdrantVectorStore } = require(\"@langchain/qdrant\");\nconst { OpenAIEmbeddings } = require(\"@langchain/openai\");\n\n// Qdrant connection details\nconst url = \"http://localhost:6333/\";\nconst apiKey = \"\";\n\n// OpenAI API configuration\nconst openAIApiKey = \"[Your-OpenAI-API-Key]\";\n\n// Get input data\nconst items = this.getInputData()[0];\n// console.log(items)\n\nconst collectionName =  items.json.qdrant_collection_name;\n// console.log(collectionName)\n\nasync function deleteDocumentsFromQdrant() {\n  try {\n    // Initialize OpenAI embeddings\n    const embeddings = new OpenAIEmbeddings({\n      model: \"text-embedding-3-large\",\n      openAIApiKey: openAIApiKey\n    });\n\n    // Connect to existing Qdrant collection\n    const vectorStore = await QdrantVectorStore.fromExistingCollection(embeddings, {\n      url: url,\n      apiKey: apiKey,\n      collectionName: collectionName,\n    });\n\n    const fileIds = items.json.appended_id.map(item => item);\n\n    console.log(fileIds)\n\n    // Delete points by fileId\n    const deletionResults = await Promise.all(fileIds.map(async (file_id) => {\n      const filter = {\n        must: [\n          {\n            key: \"metadata.file_id\",\n            match: { value: file_id }\n          }\n        ]\n      };\n\n      try {\n        // Access the underlying Qdrant client to perform the deletion\n        await vectorStore.client.delete(collectionName, { filter });\n        return { file_id, status: \"deleted\" };\n      } catch (error) {\n        console.error(`Error deleting documents for fileId ${file_id}:`, error);\n        return { file_id, status: \"error\", message: error.message };\n      }\n    }));\n\n    return deletionResults;\n  } catch (error) {\n    console.error(\"An error occurred during the deletion process:\", error);\n    return error.message;\n  }\n}\n\n// Execute the deletion process\ntry {\n  const result = await deleteDocumentsFromQdrant();\n  console.log(\"Deletion process completed:\", result);\n  return [];\n} catch (error) {\n  console.error(\"Failed to execute deletion process:\", error);\n  return [{ json: { error } }];\n}\n\n"
          }
        },
        "inputs": {
          "input": [
            {
              "type": "main",
              "maxConnections": 1,
              "required": true
            },
            {
              "type": "ai_languageModel",
              "maxConnections": 1,
              "required": true
            }
          ]
        },
        "outputs": {
          "output": [
            {
              "type": "main"
            }
          ]
        }
      },
      "id": "23b7d2b4-f3c0-4d13-9602-ef46c628461d",
      "name": "Delete Qdrant Points by File ID",
      "type": "@n8n/n8n-nodes-langchain.code",
      "position": [
        864,
        2224
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "11fa71e9-6cbc-4183-9439-e3379b2b970e",
              "name": "qdrant_collection_name",
              "type": "string",
              "value": "nostr-damus-user-profiles"
            }
          ]
        },
        "options": {}
      },
      "id": "656c8d31-9b59-4d90-be68-ab7b5edac05d",
      "name": "Qdrant Collection Name",
      "type": "n8n-nodes-base.set",
      "position": [
        672,
        1520
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "append",
              "field": "id"
            }
          ]
        },
        "options": {}
      },
      "id": "fdae4883-4f63-4b7f-a61b-d8f45e177832",
      "name": "File Id List",
      "type": "n8n-nodes-base.summarize",
      "position": [
        672,
        1712
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "id": "303dcf6a-1a9e-4d7a-b822-ac196e02c412",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "position": [
        1024,
        1760
      ],
      "typeVersion": 3
    },
    {
      "parameters": {},
      "id": "b869fa92-84f7-4e66-8af0-48277e22b528",
      "name": "Merge2",
      "type": "n8n-nodes-base.merge",
      "position": [
        1280,
        1280
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "content": "## Prepare Qdrant Vector Store",
        "height": 760,
        "width": 1180,
        "color": 3
      },
      "id": "8e5f0c81-db18-42be-a10c-8218d249e5af",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        80,
        1984
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "sendAndWait",
        "chatId": "={{ $env.TELEGRAM_CHAT_ID }}",
        "message": "=WARNING - {{ $json.appended_id.length }} Records in the Qdrant vector store collection \"{{ $json.qdrant_collection_name }}\" will be deleted.  Are you sure you want to continue?  This action cannot be undone!",
        "approvalOptions": {
          "values": {
            "approvalType": "double"
          }
        },
        "options": {
          "limitWaitTime": {
            "values": {
              "resumeAmount": 15,
              "resumeUnit": "minutes"
            }
          }
        }
      },
      "id": "d2424242-419c-4125-a6f3-5faa58be7150",
      "name": "Confirm Qdrant Delete Points",
      "type": "n8n-nodes-base.telegram",
      "position": [
        304,
        2192
      ],
      "webhookId": "29aac1ac-9345-4e44-babf-ebcfae701d88",
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "20f530d6-fd55-420d-b8a9-70e5303f688e",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              },
              "leftValue": "={{ $json.data.approved }}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "590520f4-efb0-440a-ae53-d340d0e26d6a",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "position": [
        304,
        2432
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "content": "## Perform Qdrant Vector Store Operations",
        "height": 640,
        "width": 920,
        "color": 7
      },
      "id": "fa4d9f02-12af-476d-b629-bf464ac1ddaa",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1680,
        1840
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "chatId": "={{ $env.TELEGRAM_CHAT_ID }}",
        "text": "Qdrant vector store upsert declined",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "1c5274d5-2032-41d6-b22f-bdee9bd80188",
      "name": "Send Declined Message",
      "type": "n8n-nodes-base.telegram",
      "position": [
        624,
        2544
      ],
      "webhookId": "382a3b43-b83f-47b1-a276-67c6b98a441a",
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "content": "## 🌟Workflow Config\n\n- Google Drive Folder Id\n- Qdrant Collection Name\n- List of Google Drive File Id's",
        "height": 840,
        "width": 480
      },
      "id": "cbaa0d36-f363-4663-adbe-b3204837d5c1",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        464,
        1040
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Extract Metadata for Qdrant Hybrid Search",
        "height": 420,
        "width": 640,
        "color": 6
      },
      "id": "8ca007e9-befd-4e87-90b2-8635f6527826",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2112,
        1152
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Google Drive",
        "height": 320,
        "width": 300,
        "color": 2
      },
      "id": "365d19f2-c1fa-4e83-aed5-1768caac3431",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1760,
        1152
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## ✨ Save Documents to Qdrant Vector Store",
        "height": 1480,
        "width": 1360,
        "color": 5
      },
      "id": "837c8442-5577-4426-bf07-4e0f09fd19f4",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1440,
        1072
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Delete From Qdrant Vector Store\nThis operation can not be undone!!!",
        "height": 400,
        "width": 420,
        "color": 5
      },
      "id": "6e38d537-456c-4167-b441-a82bbdb8eff9",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        784,
        2112
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Human In The Loop\nUser must verify deletion of points from Qdrant vector store",
        "height": 520,
        "width": 380,
        "color": 4
      },
      "id": "a2494cb5-8b69-421b-890d-37e849944bad",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        160,
        2064
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## 👍Start Here!",
        "height": 460,
        "width": 340,
        "color": 4
      },
      "id": "3bf598b7-2239-44ea-af43-5ae5343073aa",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        80,
        1040
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "path": "upsert",
        "options": {}
      },
      "id": "383e7e9d-8ce0-439d-9259-1003177fb187",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "position": [
        208,
        1328
      ],
      "webhookId": "3a30557f-9264-4bc8-a253-a9356677c791",
      "typeVersion": 2,
      "notesInFlow": false,
      "disabled": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.chatInput }}",
        "options": {
          "systemMessage": "=You are an intelligent assistant specialized in answering user questions using Nostr user profiles. Your primary goal is to provide precise, contextually relevant, and concise answers based on the tools and resources available.\n\n### TOOL\nUse the \"nostr_damus_user_profiles\" tool to:\n- perform semantic similarity searches and retrieve information from Nostr user profiles relevant to the user's query.\n- access detailed information about Nostr and/or Damus users when additional context or specifics are required.\n\n### Key Instructions\n1. **Response Guidelines**:\n   - Clearly explain how the retrieved information addresses the user's query, if applicable.\n   - If no relevant information is found, respond with: \"I cannot find the answer in the available resources.\"\n\n2. **Focus and Relevance**:\n   - Ensure all responses are directly aligned with the user's question.\n   - Avoid including extraneous details or relying solely on internal knowledge.\n"
        }
      },
      "id": "7baf5767-fafd-414b-a449-a222d4fe9353",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        768,
        224
      ],
      "typeVersion": 1.7
    },
    {
      "parameters": {
        "contextWindowLength": 40
      },
      "id": "7b44288a-b979-44b7-9d94-93da098c10a2",
      "name": "Window Buffer Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        784,
        432
      ],
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "b446fa64-72fd-4a5b-8f24-2fdfc767506b",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "position": [
        208,
        224
      ],
      "webhookId": "5f1c0c82-0ff9-40c7-9e2e-b1a96ffe24cd",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash-exp",
        "options": {
          "maxOutputTokens": 8192
        }
      },
      "id": "14bd249a-4044-479d-9b4d-ff2acd0631ab",
      "name": "Google Gemini Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "position": [
        640,
        480
      ],
      "typeVersion": 1,
      "credentials": {
        "googlePalmApi": {
          "id": "RzMqWR9wvxNArzYZ",
          "name": "Google Gemini(PaLM) Api account 2"
        }
      }
    },
    {
      "parameters": {
        "content": "## 🤖Retrieve Content from Qdrant Vector Store",
        "height": 680,
        "width": 860,
        "color": 5
      },
      "id": "8362d412-000d-4673-8356-dc8ae8de9ae2",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        464,
        144
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## 🗣️ Chat with Your Documents",
        "height": 320,
        "width": 340,
        "color": 4
      },
      "id": "dc82e68a-2d2f-42f8-8c53-45f7316c4ae4",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        80,
        128
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# Step 1 - Save Documents to Qdrant Vector Store",
        "height": 1880,
        "width": 2880,
        "color": 7
      },
      "id": "0662ea34-8bc9-42ad-8e20-8951889c53d9",
      "name": "Sticky Note11",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -80,
        944
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# Step 2 - Chat with Your Documents from Qdrant Vector Store",
        "height": 880,
        "width": 1780,
        "color": 7
      },
      "id": "e9d886f0-e792-4594-be01-c7d1f14a0f93",
      "name": "Sticky Note12",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "createFromText",
        "content": "={{ $json.output }}",
        "name": "=Nostr Chatbot - Avatar - {{ $now }}",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "mode": "list",
          "value": "root",
          "cachedResultName": "/ (Root folder)"
        },
        "options": {}
      },
      "id": "ebaf905f-c85b-4b57-8a69-cca5c51e3cb4",
      "name": "Google Drive",
      "type": "n8n-nodes-base.googleDrive",
      "position": [
        1488,
        640
      ],
      "typeVersion": 3,
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cd8f88e1-19c0-4b9e-914d-e2e7ba21d9fa",
              "name": "output",
              "type": "string",
              "value": "={{ $json.output }}"
            }
          ]
        },
        "options": {}
      },
      "id": "da3e2b39-bfda-4a53-a906-dfd436b3464e",
      "name": "Respond to User",
      "type": "n8n-nodes-base.set",
      "position": [
        1488,
        464
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "content": "## Save Chat History",
        "height": 300,
        "width": 340,
        "color": 4
      },
      "id": "6ec72b0d-6f20-4735-8ab0-f14251e4217e",
      "name": "Sticky Note13",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1360,
        128
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "update",
        "documentURL": "1ej_qLolUFp1h4eZkrb99T3DWQ3JOwXVEMS3VUjWyVf0",
        "actionsUi": {
          "actionFields": [
            {
              "action": "insert",
              "text": "=\n-------------------------------\n\n{{ $now }}\n\n{{ $('When chat message received').item.json.chatInput  }}\n\n{{ $json.output }}"
            }
          ]
        }
      },
      "id": "ed517321-8ee5-4663-9f2a-8f43c3e9a81d",
      "name": "Update Chat History",
      "type": "n8n-nodes-base.googleDocs",
      "position": [
        1488,
        224
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "nostr_damus_user_profiles",
        "toolDescription": "Retrieve information about Nostr or Damus users",
        "qdrantCollection": {
          "__rl": true,
          "mode": "list",
          "value": "nostr-damus-user-profiles",
          "cachedResultName": "nostr-damus-user-profiles"
        },
        "topK": 20,
        "options": {}
      },
      "id": "4adcf332-15e0-4daa-be4f-10dd4a2cce93",
      "name": "Qdrant Vector Store Tool",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "position": [
        960,
        480
      ],
      "typeVersion": 1,
      "credentials": {
        "qdrantApi": {
          "id": "dWw9aQLW4QsMtr1m",
          "name": "QdrantApi account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $env.TELEGRAM_CHAT_ID }}",
        "text": "Qdrant vector store upsert completed",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "c26f1e5c-c6c0-4783-a6b4-f5b4e236e326",
      "name": "Send Completed Message",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1872,
        1632
      ],
      "webhookId": "382a3b43-b83f-47b1-a276-67c6b98a441a",
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "content": "# 🤖 AI-Powered RAG Chatbot with Google Drive Integration\n\nThis workflow creates a powerful RAG (Retrieval-Augmented Generation) chatbot that can process, store, and interact with documents from Google Drive using Qdrant vector storage and Google's Gemini AI.\n\n## How It Works\n\n### Document Processing & Storage 📚\n- Retrieves documents from a specified Google Drive folder\n- Processes and splits documents into manageable chunks\n- Extracts metadata using AI for enhanced search capabilities\n- Stores document vectors in Qdrant for efficient retrieval\n\n### Intelligent Chat Interface 💬\n- Provides a conversational interface powered by Google Gemini\n- Uses RAG to retrieve relevant context from stored documents\n- Maintains chat history in Google Docs for reference\n- Delivers accurate, context-aware responses\n\n### Vector Store Management 🗄️\n- Features secure delete operations with human verification\n- Includes Telegram notifications for important operations\n- Maintains data integrity with proper version control\n- Supports batch processing of documents\n\n## Setup Steps\n\n1. Configure API Credentials:\n   - Set up Google Drive & Docs access\n   - Configure Gemini AI API\n   - Set up Qdrant vector store connection\n   - Add Telegram bot for notifications\n\n2. Configure Document Sources:\n   - Set Google Drive folder ID\n   - Define Qdrant collection name\n   - Set up document processing parameters\n\n3. Test and Deploy:\n   - Verify document processing\n   - Test chat functionality\n   - Confirm vector store operations\n   - Check notification system\n\n\nThis workflow is ideal for organizations needing to create intelligent chatbots that can access and understand large document repositories while maintaining context and providing accurate responses through RAG technology.\n",
        "height": 1240,
        "width": 700
      },
      "id": "807ae4f8-370e-429c-bdc3-7c48860616fc",
      "name": "Sticky Note14",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -768,
        944
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": "nomic-embed-text:latest"
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "typeVersion": 1,
      "position": [
        960,
        656
      ],
      "id": "eedb9079-07e3-483c-9406-df2a0b356c7c",
      "name": "Embeddings Ollama",
      "credentials": {
        "ollamaApi": {
          "id": "e2fBVE82JMg8ztMX",
          "name": "Ollama account 2"
        }
      }
    }
  ],
  "connections": {
    "If": {
      "main": [
        [
          {
            "node": "Delete Qdrant Points by File ID",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Declined Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Confirm Qdrant Delete Points",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Google Folder ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Update Chat History",
            "type": "main",
            "index": 0
          },
          {
            "node": "Respond to User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data Loader": {
      "ai_document": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "File Id List": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "gpt-4o-mini1": {
      "ai_languageModel": [
        [
          {
            "node": "Delete Qdrant Points by File ID",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Token Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Send Completed Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download File From Google Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Folder ID": {
      "main": [
        [
          {
            "node": "Find File Ids in Google Drive Folder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Meta Data": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get File Contents": {
      "main": [
        [
          {
            "node": "Extract Meta Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Qdrant Vector Store": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Qdrant Collection Name": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "text-embeddings-3-large": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Extract Meta Data",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Qdrant Vector Store Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Confirm Qdrant Delete Points": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Qdrant Points by File ID": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Download File From Google Drive": {
      "main": [
        [
          {
            "node": "Get File Contents",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Google Folder ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find File Ids in Google Drive Folder": {
      "main": [
        [
          {
            "node": "File Id List",
            "type": "main",
            "index": 0
          },
          {
            "node": "Qdrant Collection Name",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Ollama": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store Tool",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {
    "Webhook": [
      {
        "json": {
          "name": "First item",
          "code": 1
        }
      },
      {
        "json": {
          "name": "Second item",
          "code": 2
        }
      }
    ]
  },
  "versionId": "e9a6e53f-21e5-47c9-bc61-ab5027df74e8",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-05-20T08:02:40.143Z",
      "updatedAt": "2025-05-20T08:02:40.143Z",
      "role": "workflow:owner",
      "workflowId": "Jwf58kLaJ6xsens3",
      "projectId": "GRYQdjzbr9zYZfKu"
    }
  ],
  "tags": []
}